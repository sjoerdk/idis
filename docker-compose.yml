version: "2.3"

services:
  postgres:
    image: postgres:10.7
    command: "postgres -c 'config_file=/etc/postgresql/postgresql.conf'"
    environment: &postgresenv
      POSTGRES_PASSWORD: secretpassword
      POSTGRES_USER: idis
      POSTGRES_DB: idis
    ports:
      - "5432:5432" # Only required for running django locally
    volumes:
      # Use a non-durable postgres configuration
      # https://www.postgresql.org/docs/current/non-durability.html
      # USE ONLY FOR DEVELOPMENT!
      - type: bind
        source: ./dockerfiles/db/postgres.test.conf
        target: /etc/postgresql/postgresql.conf
    tmpfs:
      - /var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "idis"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

  web:
    image: idis/web-test:latest
    environment:
      <<: *postgresenv
    # Use werkzeug debugger in dev, this should never be used in production!
    # https://django-extensions.readthedocs.io/en/latest/runserver_plus.html
    command: >-
      bash -c "
      python manage.py migrate
      && python manage.py check_permissions
      && python manage.py init_idis_demo
      && python manage.py runserver_plus 0.0.0.0:8000 --nopin
      "
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      # Bind the app directory for live reloading in development
      - type: bind
        source: ./app
        target: /app/
      # The docker socket is only needed for testing
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
    group_add:
      - ${DOCKER_GID-999} # The docker group is only needed for testing
    healthcheck:
      test: ["CMD-SHELL", "curl http://web:8000/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  http:
    image: idis/http:latest
    environment:
      SERVER_NAME: idis.localhost
      SENDFILE_STATUS: 'off'
    command: >-
      bash -c "envsubst '$$SERVER_NAME $$SENDFILE_STATUS'  < /tmp/nginx.conf.template > /etc/nginx/nginx.conf
      && openssl req -x509 -newkey rsa:4096 -keyout /etc/ssl/private/$$SERVER_NAME.key -out /etc/ssl/certs/$$SERVER_NAME.crt -days 365 -nodes -subj '/CN=$$SERVER_NAME'
      && nginx -g 'daemon off;'"
    restart: always
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      web:
        condition: service_healthy